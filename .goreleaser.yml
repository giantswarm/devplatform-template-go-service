project_name: devplatform-template-go-service
builds:
  - <<: &build_defaults
      binary: devplatform-template-go-service
      main: main.go
      ldflags:
        - -s -w
      env:
        - CGO_ENABLED=0
    id: linux
    goos:
      - linux
    goarch:
      - amd64
      - arm64
      - arm
archives:
  - name_template: "{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    id: all
    builds: [linux, darwin]
    format: tar.gz
    files:
      - none*
dockers:
  - image_templates:
      - 'acr.com/giantswarm/devplatform-template-go-service:{{ .Tag }}-amd64'
      - 'acr.com/giantswarm/devplatform-template-go-service:latest-amd64'
    dockerfile: Dockerfile
    use: buildx
    goos: linux
    goarch: amd64
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.name={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
      - "--platform=linux/amd64"
  - image_templates:
      - 'acr.com/giantswarm/devplatform-template-go-service:{{ .Tag }}-arm64'
      - 'acr.com/giantswarm/devplatform-template-go-service:latest-arm64'
    dockerfile: Dockerfile
    use: buildx
    goos: linux
    goarch: arm64
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.name={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
      - "--platform=linux/arm64"
  - image_templates:
      - 'acr.com/giantswarm/devplatform-template-go-service:{{ .Tag }}-arm'
      - 'acr.com/giantswarm/devplatform-template-go-service:latest-arm'
    dockerfile: Dockerfile
    use: buildx
    goos: linux
    goarch: arm
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.name={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
      - "--platform=linux/arm"
docker_manifests:
  - name_template: 'acr.com/giantswarm/devplatform-template-go-service:{{ .Tag }}'
    image_templates:
      - 'acr.com/giantswarm/devplatform-template-go-service:{{ .Tag }}-amd64'
      - 'acr.com/giantswarm/devplatform-template-go-service:{{ .Tag }}-arm64'
      - 'acr.com/giantswarm/devplatform-template-go-service:{{ .Tag }}-arm'
  - name_template: 'acr.com/giantswarm/devplatform-template-go-service:latest'
    image_templates:
      - 'acr.com/giantswarm/devplatform-template-go-service:latest-amd64'
      - 'acr.com/giantswarm/devplatform-template-go-service:latest-arm64'
      - 'acr.com/giantswarm/devplatform-template-go-service:latest-arm'
docker_signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    args:
      - sign
      - "--yes"
      - '${artifact}'
    artifacts: all
    output: true
source:
  enabled: true
  name_template: '{{ .ProjectName }}_{{ .Version }}_src'
sboms:
  - artifacts: archive
  - id: source
    artifacts: source
    documents:
      - "{{ .ProjectName }}_{{ .Version }}_sbom.spdx.json"
release: {}
checksum: {}
signs:
  - cmd: cosign
    env:
    - COSIGN_EXPERIMENTAL=1
    certificate: '${artifact}.pem'
    args:
      - sign-blob
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'
      - "--yes"
    artifacts: checksum
    output: true
changelog:
  use: github
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: "Bug fixes"
      regexp: '^.*?bug(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: Others
      order: 999
